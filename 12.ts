type BigPost = {
    title: string;
    description: string;
    longText: string;
  };
  
  // Создаём новый псевдоним типа
  // Копируем из BigPost всё кроме `longText`
  type ShortPost = Omit<BigPost, 'longText'>;
  
  const myShortPost: ShortPost = {
    title: 'Test',
    description: 'Some Description',
  };

  
  До сих пор все определения типов мы делали вручную. Это не всегда удобно, так как порой очередной псевдоним (алиас) может частично повторять существующий. Ничего не мешает скопировать нужные поля, но TypeScript предоставляет несколько встроенных функций для манипуляций (конструирования) над типами. Одна из них — Omit.

Функция Omit полезна, когда мы собираемся конструировать новый тип и хотим взять часть структуры с уже существующего. Например, мы описали тип BigPost. Он определяет форму объекта публикации. Теперь нам потребовалось сделать ShortPost. Новый тип отличается от BigPost лишь одним — в нём отсутствует поле longText. Это прекрасная задача для Omit.

Omit выбирает все поля из существующего типа и удаляет ненужные. В примере ниже, мы копируем всё из BigPost и удаляем поле longText. В итоге получаем ShortPost с полями title и description.